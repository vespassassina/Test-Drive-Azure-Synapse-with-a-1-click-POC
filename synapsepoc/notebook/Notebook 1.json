{
	"name": "Notebook 1",
	"properties": {
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "ws1sparkpool1",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "a98f673a-0906-416a-a6f8-ec90a1cd37e0"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "python"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/d2910e0f-a763-4dd8-9c8d-0105ccd0570e/resourceGroups/Synapse2ClickPoc/providers/Microsoft.Synapse/workspaces/dtrwol5bg6xm2xfkpocws1/bigDataPools/ws1sparkpool1",
				"name": "ws1sparkpool1",
				"type": "Spark",
				"endpoint": "https://dtrwol5bg6xm2xfkpocws1.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/ws1sparkpool1",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "2.4",
				"nodeCount": 5,
				"cores": 4,
				"memory": 28,
				"automaticScaleJobs": false
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"source": [
					"from mmlspark.cognitive import *\n",
					"from notebookutils import mssparkutils\n",
					"from pyspark.sql.functions import explode\n",
					"\n",
					"# Load the data into a Spark DataFrame\n",
					"df = spark.sql(\"SELECT * FROM default.fabrikamcomments\")\n",
					"\n",
					"sentiment = (TextSentiment()\n",
					"    .setLinkedService(\"TextAnalytics\")\n",
					"    .setOutputCol(\"output\")\n",
					"    .setErrorCol(\"error\")\n",
					"    .setLanguage(\"en\")\n",
					"    .setTextCol(\"comment\"))\n",
					"\n",
					"results = sentiment.transform(df)\n",
					"\n",
					"# Show the results\n",
					"display(results\\\n",
					"    .select(\"comment\", explode(\"output\").alias(\"exploded\"), \"error\")\\\n",
					"    .select(\"comment\", \"exploded.*\", \"error\")\\\n",
					"    .limit(10))"
				],
				"execution_count": null
			}
		]
	}
}